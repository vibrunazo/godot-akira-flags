[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://csi4euyue3567"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_khw0u"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_grnf5"]
expanded_output_ports = [0]
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_oe7nu"]
default_input_values = [0, 0.0, 1, 0.5, 2, 0.0, 3, Vector3(0, 0, 0), 4, Vector3(0, 0, 0), 5, Vector3(0, 0, 0)]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_4tml3"]
parameter_name = "progress"
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_etfh5"]
function = 31

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float progress : hint_range(0, 1) = 1;



void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;
	float n_out2p4 = n_out2p0.a;


// Input:3
	vec2 n_out3p0 = UV;
	float n_out3p2 = n_out3p0.g;


// FloatFunc:6
	float n_out6p0 = 1.0 - n_out3p2;


// FloatParameter:5
	float n_out5p0 = progress;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00000;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in4p4 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out6p0 - n_out5p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out6p0 < n_out5p0)
	{
		n_out4p0 = vec3(n_out2p4);
	}
	else
	{
		n_out4p0 = n_in4p4;
	}


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);
	COLOR.a = n_out4p0.x;


}
"
graph_offset = Vector2(-337.344, 57.7073)
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_khw0u")
nodes/fragment/2/position = Vector2(-220, 120)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_grnf5")
nodes/fragment/3/position = Vector2(-480, 280)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_oe7nu")
nodes/fragment/4/position = Vector2(144.646, 252.655)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatParameter_4tml3")
nodes/fragment/5/position = Vector2(-260, 440)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatFunc_etfh5")
nodes/fragment/6/position = Vector2(-140, 320)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0, 4, 0, 0, 1, 5, 0, 4, 1, 2, 4, 4, 5, 3, 2, 6, 0, 6, 0, 4, 0)
